pipeline {
    agent any
    tools {
        maven "maven-version"
    }
    environment {
        DOCKER_REGISTRY = 'localhost:32473'
        DOCKER_IMAGE_NAME = 'house'
        DOCKER_IMAGE_TAG = "0.0." + "${env.BUILD_NUMBER}"
    }
    
    stages  {
        stage('Clone') {
            steps {
                git branch: 'main', url: 'https://github.com/hasretagaslan/jenkins-project.git'
            }
        }
        stage('Create Jar Files') {
            steps {
                sh 'cd ./RestApi && mvn clean package'
            }
        }
        // stage('SonarQube analysis') {
        //     steps {
        //         withSonarQubeEnv('Sonarqube-10.0') { // You can override the credential to be used
        //             sh '''
        //                 cd ./RestApi && mvn clean verify sonar:sonar \
        //                 -Dsonar.projectKey=maven-jenkins-pipeline \
        //                 -Dsonar.projectName='maven-jenkins-pipeline' \
        //                 -Dsonar.host.url=http://192.168.1.10:9000 \
        //                 -Dsonar.token=sqp_bacb57c2890f57297eeac3d8efd32f4daac06fde
        //             '''
        //         }
        //    } 
        // }
        stage('Build Docker Image') {
            steps {
                sh "cd ./RestApi && docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} -f DockerFile ."
            }
        }
        stage('Push Docker Image to Nexus Repository') {
            steps {
                sh "docker login ${DOCKER_REGISTRY} -u admin -p admin"
                sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
            }
        }
        stage('Change House Version and Push') {
            steps {
                withCredentials([gitUsernamePassword(credentialsId: 'jenkins-token', gitToolName: 'Default')]) {
                    sh 'sed -i -E \'s/(\'house\':.+)/\'house\':\'${DOCKER_IMAGE_TAG}\'/\' kubernetes/house.yaml'
                    sh 'git add kubernetes/house.yaml'
                    sh 'git commit -m "update version by Jenkins"'
                    sh 'git push origin main'
                }
            }
        }
        stage('Deploy new Version') {
            steps {
                sh "kubectl apply -f kubernetes/house.yaml"
            }
        }
    }
}